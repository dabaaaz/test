{
  "name": "grunt-dev-update",
  "version": "0.5.9",
  "description": "Automate the updating of your package.json packages with a grunt task",
  "homepage": "https://github.com/pgilad/grunt-dev-update",
  "bugs": {
    "url": "https://github.com/pgilad/grunt-dev-update/issues"
  },
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com"
  },
  "keywords": [
    "gruntplugin",
    "devDependencies",
    "dependencies",
    "install",
    "save-dev",
    "save",
    "automation",
    "updates"
  ],
  "files": [
    "tasks",
    "LICENSE.md"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.10.25"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pgilad/grunt-dev-update"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-nodeunit": "^0.4.0",
    "jshint-stylish": "^0.2.0",
    "load-grunt-tasks": "^0.5.0"
  },
  "dependencies": {
    "async-each-series": "^0.1.0",
    "findup-sync": "~0.1.2",
    "inquirer": "^0.5.0",
    "lodash": "^2.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# [grunt](http://gruntjs.com/)-dev-update\n> Update your devDependencies and dependencies automatically with a grunt task\n\n[![NPM Version](http://img.shields.io/npm/v/grunt-dev-update.svg?style=flat)](https://npmjs.org/package/grunt-dev-update)\n[![NPM Downloads](http://img.shields.io/npm/dm/grunt-dev-update.svg?style=flat)](https://npmjs.org/package/grunt-dev-update)\n[![Dependencies](http://img.shields.io/gemnasium/pgilad/grunt-dev-update.svg?style=flat)](https://gemnasium.com/pgilad/grunt-dev-update)\n[![Built with Grunt](http://img.shields.io/badge/BUILT_WITH-GRUNT-orange.svg?style=flat)](http://gruntjs.com/)\n\n## Getting Started\nThis plugin requires Grunt.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before,\nbe sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide,\nas it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\nOnce you're familiar with that process, you may install this plugin with this command:\n\n```bash\nnpm install grunt-dev-update --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-dev-update');\n```\n\nThe best way to load tasks is probably using [load-grunt-tasks](https://github.com/sindresorhus/load-grunt-tasks)\n\n```bash\nnpm i load-grunt-tasks -D\n```\n\nAnd then add to your gruntfile.js:\n```js\nrequire('load-grunt-tasks')(grunt);\n```\n\n***\n\n## The \"devUpdate\" task\n\n#### This plugin allows you to both update your dependencies and devDependencies with an automated task.\n\n1. See outdated packages\n2. Choose whether to just get notified, update them with a prompt, or automatically update them.\n3. Determine whether to stay with semver rules when updating, or to update to latest version.\n4. Update either or both your devDependencies and dependencies\n\n*Q: Why not use `npm update` or `npm install`?*\n\n**A: First, npm update doesn't work on dev dependencies. Second, npm update stays inside your semver matching in your package.json,\nthirdly - npm isn't automated like your grunt tasks.**\n\n### Overview\nIn your project's Gruntfile, add a task config named `devUpdate` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n    devUpdate: {\n        your_target: {\n            options: {\n            // Target specific options go here\n            }\n        }\n    }\n})\n```\n\n### Options\n\n#### options.reportUpdated\nType: `Boolean`\nDefault value: `false`\n\nWhether to report an already updated package\n\n#### options.updateType\nType: `String`\nDefault value: `report`\n\nHow devUpdate should handle the outdated packages. Valid options:\n\n* `report` - Just report that the package is outdated.\n* `prompt` - Prompt user to confirm update of every package\n* `force` - Automatically force the update for the outdated packages.\n\n#### options.packages\nType: `Object`\nDefault value: `{devDependencies: true}`\n\nWhat kind of packages should be checked. Valid options:\n\n* `dependencies` - Specify true to check **production dependencies**.\n\n    > Outdated **dependencies** are installed using the `--save` option.\n\n* `devDependencies` - Specify true to check **development dependencies**. This is **true** by default.\n\n    > Outdated **devDependencies** are installed using the `--save-dev` option.\n\n#### options.semver\nType: `Boolean`\nDefault value: `true`\n\nIf true or undefined, packages will be updated with `npm update` and will be installed up to your allowed version in\nyour `package.json`. Your allowed version is determined using [semver](http://semver.org).\n\nIf false your packages will be updated to the latest version there is, regardless of your `package.json` specifications.\n\n**Warning** - this could break packages and only use this option if you're sure of what you're doing.\n\n#### options.packageJson\nType: `null|Object|String`\nDefault value: `null`\n\nThis option allow you to manully configure the path of your **package.json**. Valid options:\n\n* `null` - This will use `matchdep` own logic for finding your package.json (using `findup` to find\nnearest package.json). This is the recommended and default option.\n* `String` - specify a relative path from your **process.cwd()** to find your package.json.\n* `Object` - pass in an object representing your package.json\n\nFor better understanding the `String` and `Object` option, please see [matchdep config](https://github.com/tkellen/node-matchdep#config).\n\n### Usage Examples\n\n#### Default Options\nExample usage with all options specified with defaults:\n\n```js\ngrunt.initConfig({\n    devUpdate: {\n        main: {\n            options: {\n                updateType: 'report', //just report outdated packages\n                reportUpdated: false, //don't report already updated packages\n                semver: true, //use package.json semver rules when updating\n                packages: { //what packages to check\n                    devDependencies: true, //only devDependencies\n                    dependencies: false\n                },\n                packageJson: null //find package.json automatically\n            }\n        }\n    }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## License\nCopyright (c) 2014 Gilad Peleg. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-dev-update@0.5.9",
  "dist": {
    "shasum": "8acc508a21f7d92c7cbf077f1d71be70ac121d42"
  },
  "_from": "grunt-dev-update@0.5.9",
  "_resolved": "https://registry.npmjs.org/grunt-dev-update/-/grunt-dev-update-0.5.9.tgz"
}
